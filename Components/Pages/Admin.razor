@page "/admin"
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavManager
<!--- Remove below before user tests --->
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Admin Dashboard</PageTitle>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }

        /* Header */
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            background-color: #333;
            color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .logo h1 {
            margin: 0;
            font-size: 20px;
        }

        .search-bar input {
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            width: 200px;
        }

        /* Layout */
        .container {
            display: flex;
            min-height: calc(100vh - 60px);
            max-width: 1550px;
            margin: 0 auto; 
        }

        /* Sidebar */
        .sidebar {
            width: 200px;
            background-color: #fff;
            box-shadow: 1px 0 3px rgba(0, 0, 0, 0.1);
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .sidebar ul li {
            border-bottom: 1px solid #eee;
        }

        .sidebar ul li a {
            display: block;
            padding: 12px 20px;
            text-decoration: none;
            color: #333;
        }

        .sidebar ul li.active a {
            background-color: #f0f0f0;
            color: #0066cc;
            font-weight: bold;
        }

        .sidebar ul li a:hover {
            background-color: #f8f8f8;
        }

        /* Main Content */
        .main-content {
            flex-grow: 1;
            padding: 20px;
        }

        .section {
            display: none;
        }

        .section.active {
            display: block;
        }

        /* Cards */
        .cards {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 20px;
        }

        .card {
            background: white;
            padding: 20px;
            border-radius: 4px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            flex: 1;
            min-width: 200px;
            text-align: center;
        }

        .card h2 {
            font-size: 28px;
            margin: 0 0 10px 0;
        }

        .card p {
            margin: 0;
            color: #666;
        }

        /* Tables */
        table {
            width: 100%;
            border-collapse: collapse;
            background: white;
            margin-bottom: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        th {
            background-color: #f5f5f5;
            font-weight: bold;
        }

        /* Forms */
        form {
            background: white;
            padding: 20px;
            border-radius: 4px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
        }

        input, textarea, select {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        textarea {
            min-height: 120px;
            resize: vertical;
        }

        button {
            background-color: #0066cc;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0055aa;
        }

        /* Accordions */
        .accordion {
            background-color: #f5f5f5;
            color: #333;
            cursor: pointer;
            padding: 15px;
            width: 100%;
            border: none;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .accordion:hover {
            background-color: #eee;
        }

        .panel {
            display: none;
            padding: 15px;
            background-color: white;
            border-bottom: 1px solid #ddd;
        }

        /* Section headers */
        h1 {
            margin-top: 0;
            margin-bottom: 20px;
        }

        h2 {
            margin-top: 0;
        }

        .close-btn {
            margin-left: 10px;
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 4px;
        }

        .close-btn.reopen {
            background-color: #27ae60; /* Green */
        }

        .close-btn:disabled {
            background-color: #aaa;
            cursor: not-allowed;
        }

        .status-label {
            font-weight: bold;
        }

        #filterStatus {
            margin: 10px 0 20px;
            padding: 5px 10px;
            font-size: 14px;
        }

    </style>
</head>
<body>
    <header>
        <div class="logo">
            <h1>Admin Dashboard</h1>
        </div>
        <div class="search-bar">
            <input type="text" placeholder="Search...">
        </div>
    </header>
    <div class="container">
        <nav class="sidebar">
            <ul>
                <li class="active"><a href="#" onclick="event.preventDefault(); showSection('dashboard')">Dashboard</a></li>
                <li><a href="#" onclick="event.preventDefault(); showSection('appeals')">Appeals</a></li>
                <li><a href="#" onclick="event.preventDefault(); showSection('statusUpdate')">Update Appeal Status</a></li>
                <li><a href="#" onclick="event.preventDefault(); showSection('statusUpdate')">Update Homepage</a></li>
                <li><a href="#" onclick="event.preventDefault(); showSection('statusUpdate')">Options</a></li>
            </ul>
        </nav>
        <main class="main-content">
            <section id="dashboard" class="section active">
                <h1>Dashboard</h1>
                <div class="cards">
                    <div class="card">
                        <h2>10</h2>
                        <p>Appeals Submitted</p>
                    </div>
                    <div class="card">
                        <h2>25</h2>
                        <p>Comments</p>
                    </div>
                    <div class="card">
                        <h2>10</h2>
                        <p>Pending</p>
                    </div>
                </div>
                
                <h2>Recent Submissions</h2>
                <!-- Filter Dropdown -->
            <label for="filterStatus"><strong>Filter by Status:</strong></label>
            <select id="filterStatus" onchange="filterAppealsByStatus()">
                <option value="All">All</option>
                <option value="Pending">Pending</option>
                <option value="Closed">Closed</option>
            </select>

                <table>
                    <thead>
                        <tr>
                            <th>Appeal</th>
                            <th>Comments</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr data-status="Pending" data-id="0">
                            <td>Appeal 1</td>
                            <td>0</td>
                            <td>
                                <span class="status-label">Pending</span>
                                <button onclick="toggleAppealStatus(this)" class="close-btn">Close</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </section>
            
            <section id="appeals" class="section">
                <AppealsDashboard 
                    Title="Student Appeals Dashboard" 
                    OnAppealSelected="ViewAppealDetails" />

                    @code {
                    private void ViewAppealDetails(string appealId)
                    {
                        NavManager.NavigateTo($"/admin/appeals/{appealId}");
                    }
                }
            </section>
            
            <section id="statusUpdate" class="section">
                <h1>Status Updates</h1>
                <button class="accordion">Update 1</button>
                <div class="panel">
                    <p>Status update details...</p>
                </div>
                <button class="accordion">Update 2</button>
                <div class="panel">
                    <p>Status update details...</p>
                </div>
            </section>
        </main>
    </div>

    <script>
        // Show section function
        function showSection(sectionId) {
            // Hide all sections
            var sections = document.getElementsByClassName('section');
            for (var i = 0; i < sections.length; i++) {
                sections[i].classList.remove('active');
            }
            
            // Show selected section
            document.getElementById(sectionId).classList.add('active');
            
            // Update active menu item
            var menuItems = document.querySelectorAll('.sidebar ul li');
            for (var i = 0; i < menuItems.length; i++) {
                menuItems[i].classList.remove('active');
            }
            
            var activeMenuItem = document.querySelector(`.sidebar ul li a[onclick="showSection('${sectionId}')"]`).parentNode;
            activeMenuItem.classList.add('active');
        }
        
        // Accordion functionality
        var acc = document.getElementsByClassName('accordion');
        for (var i = 0; i < acc.length; i++) {
            acc[i].addEventListener('click', function() {
                this.classList.toggle('active');
                var panel = this.nextElementSibling;
                if (panel.style.display === 'block') {
                    panel.style.display = 'none';
                } else {
                    panel.style.display = 'block';
                }
            });
        }

        // toggle appeal
        async function toggleAppealStatus(button) {
            const row = button.closest("tr");
            const statusSpan = row.querySelector(".status-label");
            const currentStatus = row.getAttribute("data-status");
            const appealId = row.getAttribute("data-id");

            const newStatus = currentStatus === "Pending" ? "Closed" : "Pending";

            // Update UI 
            statusSpan.innerText = newStatus;
            statusSpan.style.color = newStatus === "Closed" ? "red" : "black";
            button.innerText = newStatus === "Closed" ? "Reopen" : "Close";
            button.classList.toggle("reopen-btn", newStatus === "Closed");
            row.setAttribute("data-status", newStatus);

            // Send to backend
            try {
                const response = await fetch(`/api/appeal/${appealId}/status`, {
                    method: "PATCH",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ status: newStatus })
                });

                if (!response.ok) {
                    throw new Error("Failed to update appeal status");
                }
            } catch (err) {
                alert("Error saving status. Try again.");
                console.error(err);
            }

            filterAppealsByStatus(); // Optional: refresh the filtered view
        }
    //filter by open or close
    function filterAppealsByStatus() {
        const selected = document.getElementById("filterStatus").value;
        const rows = document.querySelectorAll("tbody tr");

        rows.forEach(row => {
            const status = row.getAttribute("data-status");
            row.style.display = (selected === "All" || selected === status) ? "" : "none";
        });
    }
    </script>
</body>
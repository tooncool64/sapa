@page "/appeal2"
@inject HttpClient Http

<PageTitle>Appeal Documentation</PageTitle>

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="AppealFormPage2.css"/>
</head>
<body>
<div class="container">
    <h1>Reasons & Supporting Documentation for SAP Appeal</h1>

    <div class="card">
        <h2>1. Personal Illness or Injury (Physical and Mental Health)</h2>
        <div class="subpoints">
            <p>a. A detailed explanation of the medical circumstances including the date.</p>
            <p>b. Supporting documentation.</p>
            <p>c. Documentation regarding what steps you've taken.</p>
        </div>
    </div>

    <div class="card">
        <h2>2. Illness of a Family Member</h2>
        <div class="subpoints">
            <p>a. A detailed explanation of the medical circumstances of the family member.</p>
            <p>b. Supporting documentation.</p>
            <p>c. Documentation regarding what steps you've taken.</p>
        </div>
    </div>

    <div class="card">
        <h2>Death of a Family Member/ Roommate/ Close Friend</h2>
        <div class="subpoints">
            <p>a. A detailed statement including the name of the deceased and their relationship.</p>
            <p>b. Supporting documentation.</p>
            <p>c. Documentation demonstrating your ability to return to classes.</p>
        </div>
    </div>

    <div class="card">
        <h2>Personal Crisis</h2>
        <div class="subpoints">
            <p>a. A detailed explanation of the crisis including the date of occurrence, duration, and impact on coursework.</p>
            <p>b. Supporting documentation.</p>
            <p>c. Documentation regarding what steps you've taken to resolve the crisis.</p>
        </div>
    </div>

    <div class="card">
        <h2>Other Circumstances Beyond Your Control</h2>
        <div class="subpoints">
            <p>a. Provide documentation of extenuating circumstances beyond your control.</p>
            <p>b. Documentation supporting that your circumstances have either been resolved or are being managed.</p>
        </div>
    </div>

    <div class="card">
        <h2>Exceeded Maximum Hours for Degree Completion</h2>
        <div class="subpoints">
            <p>a. A detailed explanation for exceeding the maximum hours required.</p>
            <p>b. A prescribed academic plan of work from an academic advisor.</p>
        </div>
    </div>
    <div class="documentation">
        <label id="documentation-label" for="myCheck">
            <span class="label-text">
                Official documentation supporting your extenuating circumstance(s):
            </span>
        </label>
        <p id="documentation-description">
            The only acceptable forms of documentation are pdf and word.
        </p>
    </div>

    <div class="card">
        <p><strong>Note:</strong> Appeals submitted for reasons above will be reviewed on a case-by-case basis. Appeals are not automatically approved for any of the above reasons but are reviewed based on circumstances, documented academic history, and academic success potential.</p>
    </div>
</div>


<InputFile OnChange="@UploadFile" multiple accept=".jpg, .jpeg, .png, image/*, .pdf, .docx" />

<!--Test Div -->
<div class="mt-3">
    @if (_uploadStatus != null)
    {
        <div class="@(_uploadStatus.Success ? "text-success" : "text-danger")">
            @_uploadStatus.Message
        </div>
    }
</div>


<div class="card">
    <NavLink href="/appeal3"><button>Next Page</button></NavLink>
</div>

<script>
function myFunction() {
  var checkBox = document.getElementById("myCheck");
  var text = document.getElementById("text");
  if (checkBox.checked == true){
    text.style.display = "block";
  } else {
     text.style.display = "none";
  }
}
</script>

</body>
</html>

@code {
    private UploadStatus? _uploadStatus;

    private class UploadStatus
    {
        public bool Success { get; set; }
        public string Message { get; set; } = "";
    }

    private async Task UploadFile(InputFileChangeEventArgs e)
    {
        try
        {
            _uploadStatus = null;
            var files = e.GetMultipleFiles();

            foreach (var file in files)
            {
                try
                {
                    var content = new MultipartFormDataContent();
                    var stream = file.OpenReadStream(10_000_000);
                    var streamContent = new StreamContent(stream);
                    content.Add(streamContent, "file", file.Name);

                    var response = await Http.PostAsync(
                        "https://sap-app-e2hbhkhuabe3hjd8.westus-01.azurewebsites.net/api/upload",
                        content);

                    var responseContent = await response.Content.ReadAsStringAsync();

                    if (!response.IsSuccessStatusCode)
                    {
                        throw new Exception($"Upload failed: {response.StatusCode} - {responseContent}");
                    }

                    _uploadStatus = new UploadStatus
                    {
                        Success = true,
                        Message = $"Successfully uploaded {file.Name}"
                    };
                }
                catch (Exception ex)
                {
                    _uploadStatus = new UploadStatus
                    {
                        Success = false,
                        Message = $"Failed to upload {file.Name}: {ex.Message}"
                    };
                }
                finally
                {
                    StateHasChanged();
                }
            }
        }
        catch (Exception ex)
        {
            _uploadStatus = new UploadStatus
            {
                Success = false,
                Message = $"Error processing files: {ex.Message}"
            };
            StateHasChanged();
        }
    }
}
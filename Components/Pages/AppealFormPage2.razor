@page "/appeal2"
@inject HttpClient Http

<PageTitle>Appeal Documentation</PageTitle>

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="AppealFormPage2.css"/>
    <style>
        .file-upload-container {
            margin: 20px 0;
        }
        
        .file-input-wrapper {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        
        .selected-files {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-top: 15px;
        }
        
        .file-thumbnail {
            position: relative;
            width: 120px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 4px;
            background-color: #f9f9f9;
        }
        
        .file-icon {
            width: 100%;
            height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 40px;
            color: #6c757d;
        }
        
        .file-name {
            font-size: 12px;
            word-break: break-word;
            text-align: center;
            margin-top: 5px;
        }
        
        .remove-file {
            position: absolute;
            top: -8px;
            right: -8px;
            width: 22px;
            height: 22px;
            border-radius: 50%;
            background-color: #dc3545;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
            border: none;
        }
        
        .upload-btn {
            background-color: #007bff;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 15px;
        }
        
        .upload-btn:disabled {
            background-color: #6c757d;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
<div class="container">
    <h1 id="page-title">Reasons & Supporting Documentation for SAP Appeal</h1>

    <div class="card">
        <h2 id="reason-1-title">1. Personal Illness or Injury (Physical and Mental Health)</h2>
        <div class="subpoints">
            <p id="reason-1a">a. A detailed explanation of the medical circumstances including the date.</p>
            <p id="reason-1b">b. Supporting documentation.</p>
            <p id="reason-1c">c. Documentation regarding what steps you've taken.</p>
        </div>
    </div>

    <div class="card">
        <h2 id="reason-2-title">2. Illness of a Family Member</h2>
        <div class="subpoints">
            <p id="reason-2a">a. A detailed explanation of the medical circumstances of the family member.</p>
            <p id="reason-2b">b. Supporting documentation.</p>
            <p id="reason-2c">c. Documentation regarding what steps you've taken.</p>
        </div>
    </div>

    <div class="card">
        <h2 id="reason-3-title">Death of a Family Member/ Roommate/ Close Friend</h2>
        <div class="subpoints">
            <p id="reason-3a">a. A detailed statement including the name of the deceased and their relationship.</p>
            <p id="reason-3b">b. Supporting documentation.</p>
            <p id="reason-3c">c. Documentation demonstrating your ability to return to classes.</p>
        </div>
    </div>

    <div class="card">
        <h2 id="reason-4-title">Personal Crisis</h2>
        <div class="subpoints">
            <p id="reason-4a">a. A detailed explanation of the crisis including the date of occurrence, duration, and impact on coursework.</p>
            <p id="reason-4b">b. Supporting documentation.</p>
            <p id="reason-4c">c. Documentation regarding what steps you've taken to resolve the crisis.</p>
        </div>
    </div>

    <div class="card">
        <h2 id="reason-5-title">Other Circumstances Beyond Your Control</h2>
        <div class="subpoints">
            <p id="reason-5a">a. Provide documentation of extenuating circumstances beyond your control.</p>
            <p id="reason-5b">b. Documentation supporting that your circumstances have either been resolved or are being managed.</p>
        </div>
    </div>

    <div class="card">
        <h2 id="reason-6-title">Exceeded Maximum Hours for Degree Completion</h2>
        <div class="subpoints">
            <p id="reason-6a">a. A detailed explanation for exceeding the maximum hours required.</p>
            <p id="reason-6b">b. A prescribed academic plan of work from an academic advisor.</p>
        </div>
    </div>

    <div class="documentation">
        <label id="documentation-label">
            <span class="label-text">
                Official documentation supporting your extenuating circumstance(s):
            </span>
        </label>
        <p id="documentation-description">
            The only acceptable forms of documentation are PDF and Word.
        </p>
    </div>

    <div class="file-upload-container">
        <div class="file-input-wrapper">
            <InputFile OnChange="@SelectFiles" multiple accept=".pdf, .docx" id="fileInput" />
            
            @if (selectedFiles.Count > 0)
            {
                <div class="selected-files">
                    @foreach (var file in selectedFiles)
                    {
                        <div class="file-thumbnail">
                            <button class="remove-file" @onclick="() => RemoveFile(file)">×</button>
                            <div class="file-icon">
                                @if (file.Name.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span>📄</span>
                                }
                                else if (file.Name.EndsWith(".docx", StringComparison.OrdinalIgnoreCase))
                                {
                                    <span>📝</span>
                                }
                            </div>
                            <div class="file-name">@file.Name</div>
                        </div>
                    }
                </div>
                <button class="upload-btn" @onclick="UploadSelectedFiles" disabled="@isUploading">
                    @if (isUploading)
                    {
                        <span>Uploading...</span>
                    }
                    else
                    {
                        <span>Upload Selected Files</span>
                    }
                </button>
            }
        </div>
    </div>

    <div class="card">
        <p id="final-note"><strong>Note:</strong> Appeals submitted for reasons above will be reviewed on a case-by-case basis. Appeals are not automatically approved for any of the above reasons but are reviewed based on circumstances, documented academic history, and academic success potential.</p>
    </div>

    <!-- Language Toggle Button -->
    <button id="toggle-button" class="lang-toggle" onclick="toggleLanguage()">Español</button>

    <!--Test Div -->
    <div class="mt-3">
        @if (_uploadStatus != null)
        {
            <div class="@(_uploadStatus.Success ? "text-success" : "text-danger")">
                @_uploadStatus.Message
            </div>
        }
    </div>

    <div class="card">
        <NavLink href="/appeal3"><button>Next Page</button></NavLink>
    </div>
</div>

<script>
function myFunction() {
  var checkBox = document.getElementById("myCheck");
  var text = document.getElementById("text");
  if (checkBox.checked == true){
    text.style.display = "block";
  } else {
     text.style.display = "none";
  }
}

var currentLanguage = "en";

var translations = {
    en: {
        "toggle-button": "Español",
        "page-title": "Reasons & Supporting Documentation for SAP Appeal",
        "reason-1-title": "1. Personal Illness or Injury (Physical and Mental Health)",
        "reason-1a": "a. A detailed explanation of the medical circumstances including the date.",
        "reason-1b": "b. Supporting documentation.",
        "reason-1c": "c. Documentation regarding what steps you've taken.",
        
        "reason-2-title": "2. Illness of a Family Member",
        "reason-2a": "a. A detailed explanation of the medical circumstances of the family member.",
        "reason-2b": "b. Supporting documentation.",
        "reason-2c": "c. Documentation regarding what steps you've taken.",

        "reason-3-title": "Death of a Family Member/ Roommate/ Close Friend",
        "reason-3a": "a. A detailed statement including the name of the deceased and their relationship.",
        "reason-3b": "b. Supporting documentation.",
        "reason-3c": "c. Documentation demonstrating your ability to return to classes.",

        "reason-4-title": "Personal Crisis",
        "reason-4a": "a. A detailed explanation of the crisis including the date of occurrence, duration, and impact on coursework.",
        "reason-4b": "b. Supporting documentation.",
        "reason-4c": "c. Documentation regarding what steps you've taken to resolve the crisis.",

        "reason-5-title": "Other Circumstances Beyond Your Control",
        "reason-5a": "a. Provide documentation of extenuating circumstances beyond your control.",
        "reason-5b": "b. Documentation supporting that your circumstances have either been resolved or are being managed.",

        "reason-6-title": "Exceeded Maximum Hours for Degree Completion",
        "reason-6a": "a. A detailed explanation for exceeding the maximum hours required.",
        "reason-6b": "b. A prescribed academic plan of work from an academic advisor.",

        "documentation-label": "Official documentation supporting your extenuating circumstance(s):",
        "documentation-description": "The only acceptable forms of documentation are PDF and Word.",

        "final-note": "Note: Appeals submitted for reasons above will be reviewed on a case-by-case basis. Appeals are not automatically approved for any of the above reasons but are reviewed based on circumstances, documented academic history, and academic success potential."
    },

    es: {
        "toggle-button": "English",
        "page-title": "Razones y Documentación de Apoyo para la Apelación SAP",
        "reason-1-title": "1. Enfermedad o Lesión Personal (Salud Física y Mental)",
        "reason-1a": "a. Una explicación detallada de las circunstancias médicas, incluida la fecha.",
        "reason-1b": "b. Documentación de respaldo.",
        "reason-1c": "c. Documentación sobre los pasos que ha tomado.",

        "reason-2-title": "2. Enfermedad de un Familiar",
        "reason-2a": "a. Una explicación detallada de las circunstancias médicas del familiar.",
        "reason-2b": "b. Documentación de respaldo.",
        "reason-2c": "c. Documentación sobre los pasos que ha tomado.",

        "reason-3-title": "Fallecimiento de un Familiar/Compañero de Cuarto/Amigo Cercano",
        "reason-3a": "a. Una declaración detallada que incluya el nombre del fallecido y su relación.",
        "reason-3b": "b. Documentación de respaldo.",
        "reason-3c": "c. Documentación que demuestre su capacidad para regresar a clases.",

        "reason-4-title": "Crisis Personal",
        "reason-4a": "a. Una explicación detallada de la crisis, incluida la fecha de ocurrencia, duración e impacto en el curso.",
        "reason-4b": "b. Documentación de respaldo.",
        "reason-4c": "c. Documentación sobre los pasos que ha tomado para resolver la crisis.",

        "reason-5-title": "Otras Circunstancias Fuera de su Control",
        "reason-5a": "a. Proporcione documentación de circunstancias atenuantes fuera de su control.",
        "reason-5b": "b. Documentación que respalde que sus circunstancias han sido resueltas o están siendo manejadas.",

        "reason-6-title": "Excedió el Máximo de Horas para la Finalización del Grado",
        "reason-6a": "a. Una explicación detallada de por qué excedió el número máximo de horas requeridas.",
        "reason-6b": "b. Un plan académico prescrito por un asesor académico.",

        "documentation-label": "Documentación oficial que respalde sus circunstancias atenuantes:",
        "documentation-description": "Las únicas formas aceptables de documentación son PDF y Word.",

        "final-note": "Nota: Las apelaciones enviadas por las razones anteriores se revisarán caso por caso. Las apelaciones no se aprueban automáticamente por ninguna de las razones anteriores, sino que se revisan en función de las circunstancias, el historial académico documentado y el potencial de éxito académico."
    }
};

function toggleLanguage() {
    currentLanguage = currentLanguage === "en" ? "es" : "en";
    document.getElementById("toggle-button").innerText = translations[currentLanguage]["toggle-button"];

    Object.keys(translations[currentLanguage]).forEach(function (key) {
        var element = document.getElementById(key);
        if (element) {
            element.innerText = translations[currentLanguage][key];
        }
    });
}

</script>

</body>
</html>

@code {
    private UploadStatus? _uploadStatus;
    private List<IBrowserFile> selectedFiles = new List<IBrowserFile>();
    private bool isUploading = false;

    private class UploadStatus
    {
        public bool Success { get; set; }
        public string Message { get; set; } = "";
    }

    private void SelectFiles(InputFileChangeEventArgs e)
    {
        // Clear previous selection to avoid stale file references
        selectedFiles.Clear();
        
        foreach (var file in e.GetMultipleFiles())
        {
            // Check if file type is .pdf or .docx
            if (file.Name.EndsWith(".pdf", StringComparison.OrdinalIgnoreCase) || 
                file.Name.EndsWith(".docx", StringComparison.OrdinalIgnoreCase))
            {
                selectedFiles.Add(file);
            }
            else
            {
                _uploadStatus = new UploadStatus
                {
                    Success = false,
                    Message = $"Invalid file type: {file.Name}. Only PDF and Word documents are accepted."
                };
            }
        }
        StateHasChanged();
    }

    private void RemoveFile(IBrowserFile file)
    {
        selectedFiles.Remove(file);
        
        // Reset the input if all files are removed
        if (selectedFiles.Count == 0)
        {
            _uploadStatus = null;
        }
        
        StateHasChanged();
    }

    private async Task UploadSelectedFiles()
    {
        if (selectedFiles.Count == 0) return;

        try
        {
            isUploading = true;
            _uploadStatus = null;
            StateHasChanged();

            // Create a snapshot of files to upload
            var filesToUpload = selectedFiles.ToList();

            // Clear the current selection to avoid stale references
            var fileNames = selectedFiles.Select(f => f.Name).ToList();
            selectedFiles.Clear();

            foreach (var file in filesToUpload)
            {
                try
                {
                    var content = new MultipartFormDataContent();
                    var stream = file.OpenReadStream(10_000_000);
                    var streamContent = new StreamContent(stream);
                    content.Add(streamContent, "file", file.Name);

                    var response = await Http.PostAsync(
                        "https://sap-app-e2hbhkhuabe3hjd8.westus-01.azurewebsites.net/api/upload",
                        content);

                    var responseContent = await response.Content.ReadAsStringAsync();

                    if (!response.IsSuccessStatusCode)
                    {
                        throw new Exception($"Upload failed: {response.StatusCode} - {responseContent}");
                    }

                    _uploadStatus = new UploadStatus
                    {
                        Success = true,
                        Message = $"Successfully uploaded {file.Name}"
                    };
                }
                catch (Exception ex)
                {
                    _uploadStatus = new UploadStatus
                    {
                        Success = false,
                        Message = $"Failed to upload {file.Name}: {ex.Message}"
                    };
                }
                finally
                {
                    StateHasChanged();
                }
            }
        }
        catch (Exception ex)
        {
            _uploadStatus = new UploadStatus
            {
                Success = false,
                Message = $"Error processing files: {ex.Message}"
            };
        }
        finally
        {
            isUploading = false;
            StateHasChanged();
        }
    }
}
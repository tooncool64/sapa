@page "/appeal"

<PageTitle>Appeal Form</PageTitle>

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="AppealFormPage1.css"/>
</head>
<body>
<div class="container">
    <header>
        <button id="toggle-button" class="lang-toggle" onclick="toggleLanguage()">Español</button>
    </header>
    <main>
        <EditForm Model="@appealForm1" FormName="AppealForm1" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator/>

            <section id="student-info" class="card">
                <h2 id="student-info-heading">Student Information</h2>
                <div class="form-group">
                    <label id="label-name">
                        <span class="label-text">Name:</span>
                        <InputText @bind-Value="appealForm1.Name" class="form-control" placeholder="Your name.."/>
                        <ValidationMessage For="@(() => appealForm1.Name)"/>
                    </label>
                </div>

                <div class="form-group">
                    <label id="label-student-id">
                        <span class="label-text">Student ID#:</span>
                        <InputText @bind-Value="appealForm1.StudentId" class="form-control" placeholder="ex: p000.."/>
                        <ValidationMessage For="@(() => appealForm1.StudentId)"/>
                    </label>
                </div>

                <div class="form-group">
                    <label id="label-date">
                        <span class="label-text">Date:</span>
                        <InputDate @bind-Value="appealForm1.Date" class="form-control"/>
                        <ValidationMessage For="@(() => appealForm1.Date)"/>
                    </label>
                </div>

                <div class="form-group">
                    <label id="email-name">
                        <span class="email-name">Email:</span>
                        <InputText @bind-Value="appealForm1.Email" class="form-control"/>
                        <ValidationMessage For="@(() => appealForm1.Email)"/>
                    </label>
                </div>

                <div class="form-group">
                    <label id="label-major">
                        <span class="label-text">Major:</span>
                        <InputText @bind-Value="appealForm1.Major" class="form-control" placeholder="Your major.."/>
                        <ValidationMessage For="@(() => appealForm1.Major)"/>
                    </label>
                </div>
            </section>

            <section id="appeal-details" class="card">
                <h2 id="appeal-details-heading">Appeal Explanation</h2>
                <p id="appeal-details-text">
                    Please provide a signed, typed, or written statement (max 500 words) explaining:
                </p>
                <ol id="appeal-details-list">
                    <li id = "appeal-list-1">Any extenuating circumstances that led to your SAP status.</li>
                    <li id = "appeal-list-2">How these circumstances affected your academic progress.</li>
                    <li id = "appeal-list-3">Steps you have taken to overcome them.</li>
                    <li id = "appeal-list-4">Your plan for future academic success.</li>
                </ol>
                <div class="form-group">
                    <InputTextArea @bind-Value="appealForm1.AppealExplanation"
                                   class="form-control"
                                   id="text-area"
                                   rows="6"
                                   placeholder="Write your explanation here..."/>
                    <ValidationMessage For="@(() => appealForm1.AppealExplanation)"/>
                </div>
            </section>

            <div class="form-actions mt-3">
                <button type="submit" id="submit-button" class="btn btn-primary" disabled="@_isSubmitting">
                    @if (_isSubmitting)
                    {
                        <span>Submitting...</span>
                    }
                    else
                    {
                        <span>Submit Appeal</span>
                    }
                </button>
            </div>
        </EditForm>

        @if (_submitted)
        {
            <div class="alert alert-success mt-3">
                Form submitted successfully!
            </div>
        }

    </main>
</div>

<section class="card" id="acknowledgements-section">
    <!-- Changed: Added an id to the heading for language toggling -->
    <h2 id="acknowledgements-heading">Acknowledgements</h2>
    <div class="checkbox-container">
        <input type="checkbox" onclick="myFunction()">
        <!-- Changed: Added an id to the span for text updating -->
        <span id="checkbox1-text">
            Payment arrangement: I understand the Office of Financial Aid will NOT hold my classes pending a decision by the SAP committee if I am unable to pay any balance on the account.
        </span>
    </div>
    <!-- Changed: Paragraph for checked message with an id -->
    <p id="text1" style="display:none">Checkbox is CHECKED!</p>

    <div class="checkbox-container">
        <input type="checkbox" onclick="myFunction()">
        <span id="checkbox2-text">
            I understand that the decision of the Office of Financial Aid is final.
        </span>
    </div>
    <p id="text2" style="display:none">Checkbox is CHECKED!</p>
</section>

<script>
function myFunction() {
  var checkBox = document.getElementById("myCheck");
  var text = document.getElementById("text");
  if (checkBox.checked == true){
    text.style.display = "block";
  } else {
     text.style.display = "none";
  }
}

var currentLanguage = "en";


var translations = {
  en: {
    title: "SAP Appeal Form",
    "toggle-button": "Español",
    "student-info-heading": "Student Information",
    "label-name": "Name:",
    "label-student-id": "Student ID#:",
    "label-date": "Date:",
    "email-name": "Email:",
    "label-major": "Major:",
    "appeal-details-heading": "Appeal Explanation",
    "appeal-details-text": "Please provide a signed, typed, or written statement (max 500 words) explaining:",
    "appeal-list-1": "Any extenuating circumstances that led to your SAP status.",
    "appeal-list-2": "How these circumstances affected your academic progress.",
    "appeal-list-3": "Steps you have taken to overcome them.",
    "appeal-list-4": "Your plan for future academic success.",
    "acknowledgements-heading": "Acknowledgements",
    "checkbox1-text": "Payment arrangement: I understand the Office of Financial Aid will NOT hold my classes pending a decision by the SAP committee if I am unable to pay any balance on the account.",
    "checkbox2-text": "I understand that the decision of the Office of Financial Aid is final.",
    "submit-button": "Submit Appeal"
  },
  es: {
    title: "Formulario de Apelación SAP",
    "toggle-button": "English",
    "student-info-heading": "Información del Estudiante",
    "label-name": "Nombre:",
    "label-student-id": "ID del Estudiante:",
    "label-date": "Fecha:",
    "email-name": "Correo Electrónico:",
    "label-major": "Especialidad:",
    "appeal-details-heading": "Explicación de la Apelación",
    "appeal-details-text": "Por favor, proporcione una declaración firmada, mecanografiada o escrita (máximo 500 palabras) explicando:",
    "appeal-list-1": "Cualquier circunstancia atenuante que llevó a su estado SAP.",
    "appeal-list-2": "Cómo estas circunstancias afectaron su progreso académico.",
    "appeal-list-3": "Los pasos que ha tomado para superarlos.",
    "appeal-list-4": "Su plan para el éxito académico futuro.",
    "acknowledgements-heading": "Reconocimientos",
    "checkbox1-text": "Arreglo de pago: Entiendo que la Oficina de Ayuda Financiera NO retendrá mis clases a la espera de una decisión del comité SAP si no puedo pagar el saldo de la cuenta.",
    "checkbox2-text": "Entiendo que la decisión de la Oficina de Ayuda Financiera es definitiva.",
    "submit-button": "Enviar Apelación"
  }
};


function toggleLanguage() {
    currentLanguage = currentLanguage === "en" ? "es" : "en";

    // Update the toggle button text
    document.getElementById("toggle-button").innerText = translations[currentLanguage]["toggle-button"];

    // Loop through all translations
    Object.keys(translations[currentLanguage]).forEach(function (key) {
        var element = document.getElementById(key);
        
        if (element) {
            // Check if it's a label with a span (for form inputs)
            if (element.querySelector(".label-text")) {
                element.querySelector(".label-text").innerText = translations[currentLanguage][key];
            } 
            // Otherwise, update normally
            else {
                element.innerText = translations[currentLanguage][key];
            }
        }
    });
}

// does not work lol

function wordLimit(){
    
       var jobValue = document.getElementById('text-area').value
       var words = jobValue.value.split(/\s+/);
       var maxWords = 500; 
       var numWords = words.length;
       if(numWords > maxWords){
    		  jobValue.preventDefault(); 
        }
}

</script>
<!-- <div class="row">
    <input type="submit" value="Submit">
</div> -->

<div class="card">
    <NavLink href="/appeal2"><button>Next Page</button></NavLink>
</div>

</body>
</html>

@code {
    private AppealFormModel1 appealForm1 = new();
    private bool _isSubmitting;
    private bool _submitted;

    protected override void OnInitialized()
    {
        appealForm1 = new AppealFormModel1
        {
            Date = DateTime.Today
        };
    }

    private void HandleValidSubmit()
    {
        Console.WriteLine("Form submitted successfully!");
        
        try
        {
            _isSubmitting = true;
            StateHasChanged();

    // Simulate API call
            AppealService.SubmitAppeal(appealForm1);
            
            _submitted = true;
    // Here you would typically navigate to a success page
    // or show a success message
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            _isSubmitting = false;
            StateHasChanged();
        }
    }
}
@page "/appeal3"
@inject IAppealFormService FormService
@inject NavigationManager Navigation

<PageTitle>Academic Plan</PageTitle>

<main>
    <EditForm Model="@_page3Model" FormName="AcademicPlan" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>

        <section id="academic-info" class="card">
            <h1>Academic Plan</h1>
            
            <div class="form-group">
                <label id="label-degree-program">
                    <span class="label-text">Degree Program:</span>
                    <InputText @bind-Value="_page3Model.DegreeProgram" class="form-control" placeholder="Your degree program..."/>
                    <ValidationMessage For="@(() => _page3Model.DegreeProgram)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-grad-date">
                    <span class="label-text">Expected Graduation Date:</span>
                    <InputDate @bind-Value="_page3Model.GradDate" class="form-control"/>
                    <ValidationMessage For="@(() => _page3Model.GradDate)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-gpa">
                    <span class="label-text">Current Cumulative GPA:</span>
                    <InputNumber @bind-Value="_page3Model.GPA" class="form-control" placeholder="0.00"/>
                    <ValidationMessage For="@(() => _page3Model.GPA)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-degree-hours">
                    <span class="label-text">Cumulative Degree Hours:</span>
                    <InputNumber @bind-Value="_page3Model.DegreeHours" class="form-control" placeholder="0"/>
                    <ValidationMessage For="@(() => _page3Model.DegreeHours)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-change-major">
                    <span class="label-text">Is this a Change of Major?</span>
                    <InputSelect @bind-Value="_page3Model.ChangeMajor" class="form-control">
                        <option value="false">No</option>
                        <option value="true">Yes</option>
                    </InputSelect>
                </label>
            </div>
        </section>

        <section id="semester1" class="card">
            <h2>Semester 1</h2>
            
            @for (var i = 0; i < 6; i++)
            {
                var index = i;
                <div class="course-row">
                    @if (_page3Model.Semester1Courses.Count <= index)
                    {
                        _page3Model.Semester1Courses.Add(new SemesterCourseValid());
                    }
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Course Name:</span>
                            <InputText @bind-Value="_page3Model.Semester1Courses[index].CourseName" class="form-control"/>
                            <ValidationMessage For="@(() => _page3Model.Semester1Courses[index].CourseName)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Course Number:</span>
                            <InputText @bind-Value="_page3Model.Semester1Courses[index].CourseNumber" class="form-control"/>
                            <ValidationMessage For="@(() => _page3Model.Semester1Courses[index].CourseNumber)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Credit Hours:</span>
                            <InputNumber @bind-Value="_page3Model.Semester1Courses[index].CreditHours" class="form-control"/>
                            <ValidationMessage For="@(() => _page3Model.Semester1Courses[index].CreditHours)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Repeat:</span>
                            <InputSelect @bind-Value="_page3Model.Semester1Courses[index].IsRepeat" class="form-control">
                                <option value="false">No</option>
                                <option value="true">Yes</option>
                            </InputSelect>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Required for Major:</span>
                            <InputSelect @bind-Value="_page3Model.Semester1Courses[index].IsRequiredForMajor" class="form-control">
                                <option value="false">No</option>
                                <option value="true">Yes</option>
                            </InputSelect>
                        </label>
                    </div>
                </div>
            }
        </section>

        <section id="semester2" class="card">
            <h2>Semester 2</h2>
            
            @for (int i = 0; i < 6; i++)
            {
                var index = i;
                <div class="course-row">
                    @if (_page3Model.Semester2Courses.Count <= index)
                    {
                        _page3Model.Semester2Courses.Add(new SemesterCourseValid());
                    }
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Course Name:</span>
                            <InputText @bind-Value="_page3Model.Semester2Courses[index].CourseName" class="form-control"/>
                            <ValidationMessage For="@(() => _page3Model.Semester2Courses[index].CourseName)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Course Number:</span>
                            <InputText @bind-Value="_page3Model.Semester2Courses[index].CourseNumber" class="form-control"/>
                            <ValidationMessage For="@(() => _page3Model.Semester2Courses[index].CourseNumber)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Credit Hours:</span>
                            <InputNumber @bind-Value="_page3Model.Semester2Courses[index].CreditHours" class="form-control"/>
                            <ValidationMessage For="@(() => _page3Model.Semester2Courses[index].CreditHours)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Repeat:</span>
                            <InputSelect @bind-Value="_page3Model.Semester2Courses[index].IsRepeat" class="form-control">
                                <option value="false">No</option>
                                <option value="true">Yes</option>
                            </InputSelect>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Required for Major:</span>
                            <InputSelect @bind-Value="_page3Model.Semester2Courses[index].IsRequiredForMajor" class="form-control">
                                <option value="false">No</option>
                                <option value="true">Yes</option>
                            </InputSelect>
                        </label>
                    </div>
                </div>
            }
        </section>
        
    <button type="submit" class="btn btn-primary">Submit Appeal</button>
    </EditForm>
</main>

@code {
    private AppealFormPart2 _page3Model = new();

    protected override void OnInitialized()
    {
        // Copy primitive properties
        _page3Model.DegreeProgram = FormService.CurrentForm.DegreeProgram;
        _page3Model.GradDate = FormService.CurrentForm.GradDate;
        _page3Model.GPA = FormService.CurrentForm.GPA;
        _page3Model.DegreeHours = FormService.CurrentForm.DegreeHours;
        _page3Model.ChangeMajor = FormService.CurrentForm.ChangeMajor;

        // Initialize course lists with at least one empty item if needed
        if (FormService.CurrentForm.Semester1Courses.Count == 0)
        {
            _page3Model.Semester1Courses.Add(new SemesterCourseValid());
        }
        else
        {
            // Convert each SemesterCourse to SemesterCourseValid
            foreach (var course in FormService.CurrentForm.Semester1Courses)
            {
                _page3Model.Semester1Courses.Add(new SemesterCourseValid
                {
                    CourseName = course.CourseName,
                    CourseNumber = course.CourseNumber,
                    CreditHours = course.CreditHours,
                    IsRepeat = course.IsRepeat,
                    IsRequiredForMajor = course.IsRequiredForMajor
                });
            }
        }
        
        if (FormService.CurrentForm.Semester2Courses.Count == 0)
        {
            _page3Model.Semester2Courses.Add(new SemesterCourseValid());
        }
        else
        {
            // Convert each SemesterCourse to SemesterCourseValid
            foreach (var course in FormService.CurrentForm.Semester2Courses)
            {
                _page3Model.Semester2Courses.Add(new SemesterCourseValid
                {
                    CourseName = course.CourseName,
                    CourseNumber = course.CourseNumber,
                    CreditHours = course.CreditHours,
                    IsRepeat = course.IsRepeat,
                    IsRequiredForMajor = course.IsRequiredForMajor
                });
            }
        }
    }

    private async void HandleValidSubmit()
    {
        FormService.UpdateForm(form =>
        {
            form.DegreeProgram = _page3Model.DegreeProgram;
            form.GradDate = _page3Model.GradDate;
            form.GPA = _page3Model.GPA;
            form.DegreeHours = _page3Model.DegreeHours;
            form.ChangeMajor = _page3Model.ChangeMajor;

            // Convert SemesterCourseValid objects back to SemesterCourse objects
            form.Semester1Courses = _page3Model.Semester1Courses.Select(vc => new SemesterCourse
            {
                CourseName = vc.CourseName,
                CourseNumber = vc.CourseNumber,
                CreditHours = vc.CreditHours,
                IsRepeat = vc.IsRepeat,
                IsRequiredForMajor = vc.IsRequiredForMajor
            }).ToList();

            form.Semester2Courses = _page3Model.Semester2Courses.Select(vc => new SemesterCourse
            {
                CourseName = vc.CourseName,
                CourseNumber = vc.CourseNumber,
                CreditHours = vc.CreditHours,
                IsRepeat = vc.IsRepeat,
                IsRequiredForMajor = vc.IsRequiredForMajor
            }).ToList();
        });
        
    // At this point, the FormService.CurrentForm contains all the data from all pages
        var success =  await FormService.SubmitFormAsync();

        if (success)
        {
    // Reset the form for future use
            FormService.ResetForm();

    // Navigate to a confirmation page
            Navigation.NavigateTo("/confirmation");
        }
        else
        {
    // Handle submission error
        }
    }
}
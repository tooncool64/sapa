@page "/appeal3"
@inject IAppealFormService FormService
@inject NavigationManager Navigation

<PageTitle>Academic Plan</PageTitle>

<main>
    <EditForm Model="@FormService.CurrentForm" FormName="AcademicPlan" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator/>

        <section id="academic-info" class="card">
            <h1>Academic Plan</h1>
            
            <div class="form-group">
                <label id="label-degree-program">
                    <span class="label-text">Degree Program:</span>
                    <InputText @bind-Value="FormService.CurrentForm.DegreeProgram" class="form-control" placeholder="Your degree program..."/>
                    <ValidationMessage For="@(() => FormService.CurrentForm.DegreeProgram)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-grad-date">
                    <span class="label-text">Expected Graduation Date:</span>
                    <InputDate @bind-Value="FormService.CurrentForm.GradDate" class="form-control"/>
                    <ValidationMessage For="@(() => FormService.CurrentForm.GradDate)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-gpa">
                    <span class="label-text">Current Cumulative GPA:</span>
                    <InputNumber @bind-Value="FormService.CurrentForm.GPA" class="form-control" placeholder="0.00"/>
                    <ValidationMessage For="@(() => FormService.CurrentForm.GPA)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-degree-hours">
                    <span class="label-text">Cumulative Degree Hours:</span>
                    <InputNumber @bind-Value="FormService.CurrentForm.DegreeHours" class="form-control" placeholder="0"/>
                    <ValidationMessage For="@(() => FormService.CurrentForm.DegreeHours)"/>
                </label>
            </div>

            <div class="form-group">
                <label id="label-change-major">
                    <span class="label-text">Is this a Change of Major?</span>
                    <InputSelect @bind-Value="FormService.CurrentForm.ChangeMajor" class="form-control">
                        <option value="false">No</option>
                        <option value="true">Yes</option>
                    </InputSelect>
                </label>
            </div>
        </section>

        <section id="semester1" class="card">
            <h2>Semester 1</h2>
            
            @for (var i = 0; i < 6; i++)
            {
                var index = i;
                <div class="course-row">
                    @if (FormService.CurrentForm.Semester1Courses.Count <= index)
                    {
                        FormService.CurrentForm.Semester1Courses.Add(new SemesterCourse());
                    }
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Course Name:</span>
                            <InputText @bind-Value="FormService.CurrentForm.Semester1Courses[index].CourseName" class="form-control"/>
                            <ValidationMessage For="@(() => FormService.CurrentForm.Semester1Courses[index].CourseName)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Course Number:</span>
                            <InputText @bind-Value="FormService.CurrentForm.Semester1Courses[index].CourseNumber" class="form-control"/>
                            <ValidationMessage For="@(() => FormService.CurrentForm.Semester1Courses[index].CourseNumber)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Credit Hours:</span>
                            <InputNumber @bind-Value="FormService.CurrentForm.Semester1Courses[index].CreditHours" class="form-control"/>
                            <ValidationMessage For="@(() => FormService.CurrentForm.Semester1Courses[index].CreditHours)"/>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Repeat:</span>
                            <InputSelect @bind-Value="FormService.CurrentForm.Semester1Courses[index].IsRepeat" class="form-control">
                                <option value="false">No</option>
                                <option value="true">Yes</option>
                            </InputSelect>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label>
                            <span class="label-text">Required for Major:</span>
                            <InputSelect @bind-Value="FormService.CurrentForm.Semester1Courses[index].IsRequiredForMajor" class="form-control">
                                <option value="false">No</option>
                                <option value="true">Yes</option>
                            </InputSelect>
                        </label>
                    </div>
                </div>
            }
        </section>

    <section id="semester2" class="card">
        <h2>Semester 2</h2>
            
        @for (int i = 0; i < 6; i++)
        {
            var index = i;
            <div class="course-row">
                @if (FormService.CurrentForm.Semester2Courses.Count <= index)
                {
                    FormService.CurrentForm.Semester2Courses.Add(new SemesterCourse());
                }
                    
                <div class="form-group">
                    <label>
                        <span class="label-text">Course Name:</span>
                        <InputText @bind-Value="FormService.CurrentForm.Semester2Courses[index].CourseName" class="form-control"/>
                        <ValidationMessage For="@(() => FormService.CurrentForm.Semester2Courses[index].CourseName)"/>
                    </label>
                </div>
                    
                <div class="form-group">
                    <label>
                        <span class="label-text">Course Number:</span>
                        <InputText @bind-Value="FormService.CurrentForm.Semester2Courses[index].CourseNumber" class="form-control"/>
                        <ValidationMessage For="@(() => FormService.CurrentForm.Semester2Courses[index].CourseNumber)"/>
                    </label>
                </div>
                    
                <div class="form-group">
                    <label>
                        <span class="label-text">Credit Hours:</span>
                        <InputNumber @bind-Value="FormService.CurrentForm.Semester2Courses[index].CreditHours" class="form-control"/>
                        <ValidationMessage For="@(() => FormService.CurrentForm.Semester2Courses[index].CreditHours)"/>
                    </label>
                </div>
                    
                <div class="form-group">
                    <label>
                        <span class="label-text">Repeat:</span>
                        <InputSelect @bind-Value="FormService.CurrentForm.Semester2Courses[index].IsRepeat" class="form-control">
                            <option value="false">No</option>
                            <option value="true">Yes</option>
                        </InputSelect>
                    </label>
                </div>
                    
                <div class="form-group">
                    <label>
                        <span class="label-text">Required for Major:</span>
                        <InputSelect @bind-Value="FormService.CurrentForm.Semester2Courses[index].IsRequiredForMajor" class="form-control">
                            <option value="false">No</option>
                            <option value="true">Yes</option>
                        </InputSelect>
                    </label>
                </div>
            </div>
        }
    </section>
    </EditForm>
</main>

@code {
    private async Task HandleSubmit()
    {
    // At this point, the FormService.CurrentForm contains all the data from all pages
        bool success = await FormService.SubmitFormAsync();
        
        if (success)
        {
    // Reset the form for future use
            FormService.ResetForm();
            
    // Navigate to a confirmation page
            Navigation.NavigateTo("/confirmation");
        }
        else
        {
    // Handle submission error
        }
    }
}